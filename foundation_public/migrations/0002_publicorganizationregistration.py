# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-12-23 23:17
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('foundation_public', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PublicOrganizationRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('alternate_name', models.CharField(blank=True, help_text='An alias for the item.', max_length=255, null=True, verbose_name='Alternate Name')),
                ('description', models.TextField(blank=True, help_text='A short description of the item.', null=True, verbose_name='Description')),
                ('main_entity_of_page', models.URLField(blank=True, help_text='Indicates a page for which this thing is the main entity being described.', null=True, verbose_name='Main Entity Of Page')),
                ('same_as', models.URLField(blank=True, help_text="URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.", null=True, verbose_name='Same As')),
                ('url', models.URLField(blank=True, help_text='URL of the item.', null=True, verbose_name='URL')),
                ('schema_name', models.CharField(blank=True, help_text='The official name of the organization, e.g. the registered company name.', max_length=255, null=True, verbose_name='Legal Name')),
                ('name', models.CharField(blank=True, help_text='The official name of the organization, e.g. the registered company name.', max_length=255, null=True, verbose_name='Legal Name')),
                ('address', models.ForeignKey(blank=True, help_text='Physical address of the item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_address_foundation_public_publicorganizationregistration_related', to='foundation_public.PublicPostalAddress')),
                ('contact_point', models.ForeignKey(blank=True, help_text='A contact point for a person or organization', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_contact_point_foundation_public_publicorganizationregistration_related', to='foundation_public.PublicContactPoint')),
                ('image', models.ForeignKey(blank=True, help_text='An image of the item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='abstract_public_thing_image_foundation_public_publicorganizationregistration_related', to='foundation_public.PublicImageUpload')),
                ('owner', models.ForeignKey(blank=True, help_text='The user whom owns this thing.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abstract_public_thing_owner_foundation_public_publicorganizationregistration_related', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(blank=True, help_text='The users that belong to this Organization.', related_name='organization_users_foundation_public_publicorganizationregistration_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Organizations Registration',
                'verbose_name': 'Organization Registration',
                'db_table': 'smeg_organization_registration',
            },
        ),
    ]
