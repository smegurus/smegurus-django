# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-29 18:05
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('foundation_tenant', '0003_postaladdress'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('alternate_name', models.CharField(blank=True, help_text='An alias for the item.', max_length=255, null=True, verbose_name='Alternate Name')),
                ('description', models.TextField(blank=True, help_text='A short description of the item.', null=True, verbose_name='Description')),
                ('main_entity_of_page', models.URLField(blank=True, help_text='Indicates a page for which this thing is the main entity being described.', null=True, verbose_name='Main Entity Of Page')),
                ('name', models.CharField(blank=True, help_text='The name of the item.', max_length=255, null=True, verbose_name='Name')),
                ('same_as', models.URLField(blank=True, help_text="URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.", null=True, verbose_name='Same As')),
                ('url', models.URLField(blank=True, help_text='URL of the item.', null=True, verbose_name='URL')),
                ('area_served', models.CharField(blank=True, help_text='The geographic area where a service or offered item is provided.', max_length=127, null=True, verbose_name='Area Served')),
                ('contact_type', models.CharField(blank=True, help_text='A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.', max_length=127, null=True, verbose_name='Contact Type')),
                ('email', models.EmailField(blank=True, help_text='Email address.', max_length=254, null=True, verbose_name='Email')),
                ('fax_number', models.CharField(blank=True, help_text='The fax number.', max_length=31, null=True, verbose_name='Fax Number')),
                ('product_supported', models.CharField(blank=True, help_text='The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones").', max_length=31, null=True, verbose_name='Product Supported')),
                ('telephone', models.CharField(blank=True, help_text='The telephone number.', max_length=31, null=True, verbose_name='Telephone')),
                ('available_language', models.ForeignKey(blank=True, help_text='A language someone may use with the item.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_point_available_language', to='foundation_tenant.Language')),
            ],
            options={
                'db_table': 'biz_contact_points',
                'verbose_name_plural': 'Contact Points',
                'verbose_name': 'Contact Point',
            },
        ),
        migrations.CreateModel(
            name='OpeningHoursSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('alternate_name', models.CharField(blank=True, help_text='An alias for the item.', max_length=255, null=True, verbose_name='Alternate Name')),
                ('description', models.TextField(blank=True, help_text='A short description of the item.', null=True, verbose_name='Description')),
                ('main_entity_of_page', models.URLField(blank=True, help_text='Indicates a page for which this thing is the main entity being described.', null=True, verbose_name='Main Entity Of Page')),
                ('name', models.CharField(blank=True, help_text='The name of the item.', max_length=255, null=True, verbose_name='Name')),
                ('same_as', models.URLField(blank=True, help_text="URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.", null=True, verbose_name='Same As')),
                ('url', models.URLField(blank=True, help_text='URL of the item.', null=True, verbose_name='URL')),
                ('closes', models.CharField(blank=True, help_text='The closing hour of the place or service on the given day(s) of the week.', max_length=5, null=True, verbose_name='Closes')),
                ('day_of_week', models.CharField(blank=True, help_text='The day of the week for which these opening hours are valid.', max_length=2, null=True, verbose_name='Day Of Week')),
                ('opens', models.CharField(blank=True, help_text='The opening hour of the place or service on the given day(s) of the week.', max_length=5, null=True, verbose_name='Opens')),
                ('valid_from', models.DateField(blank=True, help_text='The date when the item becomes valid.', null=True, verbose_name='Valid From')),
                ('valid_through', models.DateField(blank=True, help_text='The end of the validity of offer, price specification, or opening hours data.', null=True, verbose_name='Valid Through')),
                ('image', models.ForeignKey(blank=True, help_text='An image of the item.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thing_image_foundation_tenant_openinghoursspecification_related', to='foundation_tenant.TenantImageUpload')),
                ('owner', models.ForeignKey(blank=True, help_text='The user whom owns this thing.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'biz_opening_hours_specifications',
                'verbose_name_plural': 'Opening Hours Specifications',
                'verbose_name': 'Opening Hours Specification',
            },
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='hours_available',
            field=models.ManyToManyField(blank=True, help_text='The hours during which this service or contact is available.', related_name='contact_point_hours_available', to='foundation_tenant.OpeningHoursSpecification'),
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='image',
            field=models.ForeignKey(blank=True, help_text='An image of the item.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thing_image_foundation_tenant_contactpoint_related', to='foundation_tenant.TenantImageUpload'),
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='The user whom owns this thing.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
