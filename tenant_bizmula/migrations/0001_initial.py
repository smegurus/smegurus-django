# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-01 17:48
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('foundation_tenant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('alternate_name', models.CharField(blank=True, help_text='An alias for the item.', max_length=255, null=True, verbose_name='Alternate Name')),
                ('description', models.TextField(blank=True, default='', help_text='A short description of the item.', null=True, verbose_name='Description')),
                ('main_entity_of_page', models.URLField(blank=True, help_text='Indicates a page for which this thing is the main entity being described.', null=True, verbose_name='Main Entity Of Page')),
                ('name', models.CharField(blank=True, default='', help_text='The name of the item.', max_length=255, null=True, verbose_name='Name')),
                ('same_as', models.URLField(blank=True, help_text="URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.", null=True, verbose_name='Same As')),
                ('url', models.URLField(blank=True, help_text='URL of the item.', null=True, verbose_name='URL')),
                ('image', models.ForeignKey(blank=True, help_text='An image of the item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='abstract_thing_image_tenant_bizmula_document_related', to='foundation_tenant.TenantImageUpload')),
                ('owner', models.ForeignKey(blank=True, help_text='The user whom owns this thing.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abstract_thing_owner_tenant_bizmula_document_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'db_table': 'biz_documents',
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_slide_id', models.PositiveSmallIntegerField(blank=True, default=0, help_text='The previous slide ID.', null=True, verbose_name='Previous Slide ID')),
                ('next_slide_id', models.PositiveSmallIntegerField(blank=True, default=0, help_text='The next slide ID.', null=True, verbose_name='Next Slide ID')),
                ('title', models.CharField(blank=True, help_text='The name of the City.', max_length=255, null=True, verbose_name='Introduction Title')),
            ],
            options={
                'verbose_name': 'Exercise',
                'verbose_name_plural': 'Exercises',
                'db_table': 'biz_Exercises',
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_num', models.PositiveSmallIntegerField(db_index=True, default=1, help_text='Track what stage this lecture belongs to.', verbose_name='Stage Number')),
                ('start_slide_id', models.PositiveSmallIntegerField(blank=True, default=0, help_text='The start slide ID to begin with.', null=True, verbose_name='Start Slide ID')),
                ('title', models.CharField(blank=True, help_text='The name of the City.', max_length=127, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, default='', help_text='A short description of the item.', null=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, help_text='The name of the City.', max_length=31, null=True, verbose_name='Icon')),
                ('colour', models.CharField(blank=True, help_text='The name of the City.', max_length=31, null=True, verbose_name='Colour')),
            ],
            options={
                'verbose_name': 'Lecture',
                'verbose_name_plural': 'Lectures',
                'db_table': 'biz_lectures',
            },
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_slide_id', models.PositiveSmallIntegerField(blank=True, default=0, help_text='The previous slide ID.', null=True, verbose_name='Previous Slide ID')),
                ('next_slide_id', models.PositiveSmallIntegerField(blank=True, default=0, help_text='The next slide ID.', null=True, verbose_name='Next Slide ID')),
                ('next_exercise_id', models.PositiveSmallIntegerField(blank=True, default=0, help_text='The exercise ID to load up next.', null=True, verbose_name='Exercise ID')),
                ('page_num', models.PositiveSmallIntegerField(db_index=True, default=1, help_text='The page number in the slides for the lecture.', verbose_name='Page Number')),
                ('title', models.CharField(blank=True, help_text='The name of the City.', max_length=255, null=True, verbose_name='Introduction Title')),
                ('description', models.TextField(blank=True, default='', help_text='A short description of the item.', null=True, verbose_name='Introduction Description')),
                ('video', models.FileField(blank=True, help_text='An file of the upload.', null=True, upload_to='upload', verbose_name='Video')),
                ('lecture', models.ForeignKey(blank=True, help_text='The lecture this slide belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slide_lecture_tenant_bizmula_slide_related', to='tenant_bizmula.Lecture')),
            ],
            options={
                'verbose_name': 'Slide',
                'ordering': ('page_num',),
                'verbose_name_plural': 'Slides',
                'db_table': 'biz_slides',
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='lecture',
            field=models.ForeignKey(blank=True, help_text='The lecture this Exercise belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exercise_lecture_tenant_bizmula_exercise_related', to='tenant_bizmula.Lecture'),
        ),
    ]
